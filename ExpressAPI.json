{
	"function": {
		"prefix": "ExpressAPI",
		"body": [
		  "app.use(['/login-signin', '/verify-token', '/create-certificate', '/create-badge', '/fetch-certificate-badge'], verifyFirebaseToken);",
		  "app.post('/verify-token', (req, res) => {",
		  "  try {",
		  "    // If the request reaches here, the access token has been verified",
		  "    res.status(200).json({ success: true, message: 'Access token is valid' });",
		  "  } catch (error) {",
		  "    console.error(error);",
		  "    res.status(500).json({ success: false, error: error.message });",
		  "  }",
		  "});",
		  "app.post('/login-signin', async (req, res) => {",
		  "    try {",
		  "      const accessToken = req.body.accessToken;",
		  "      const decodedToken = await admin.auth().verifyIdToken(accessToken);",
		  "      const uid = decodedToken.uid;",
		  "      const user = await mongoClient.db(dbName).collection(collectionName).findOne({ uid });",
		  "  ",
		  "      if (user) {",
		  "        res.status(200).json({ success: true, message: 'Access token is valid' });",
		  "      } else {",
		  "        const newUser = { uid, /* other user data */ };",
		  "        await mongoClient.db(dbName).collection(collectionName).insertOne(newUser);",
		  "        res.status(200).json({ success: true, message: 'User created and access token is valid' });",
		  "      }",
		  "    } catch (error) {",
		  "      console.error(error);",
		  "      res.status(500).json({ success: false, error: error.message });",
		  "    }",
		  "  });",
		  "app.post('/create-certificate', (req, res) => {",
		  "  try {",
		  "    res.status(200).json({ success: true, message: 'Certificate created successfully' });",
		  "  } catch (error) {",
		  "    console.error(error);",
		  "    res.status(500).json({ success: false, error: error.message });",
		  "  }",
		  "});",
		  "app.post('/create-badge', (req, res) => {",
		  "  try {",
		  "    res.status(200).json({ success: true, message: 'Badge created successfully' });",
		  "  } catch (error) {",
		  "    console.error(error);",
		  "    res.status(500).json({ success: false, error: error.message });",
		  "  }",
		  "});",
		  "app.post('/fetch-certificate-badge', (req, res) => {",
		  "  try {",
		  "    const data = {",
		  "      id: req.user.uid, // Assuming the middleware attached the user to the request",
		  "      name: 'Certificate 1',",
		  "      metadata: 'Certificate metadata',",
		  "    };",
		  "    res.status(200).json({ success: true, data });",
		  "  } catch (error) {",
		  "    console.error(error);",
		  "    res.status(500).json({ success: false, error: error.message });",
		  "  }",
		  "});",
		  "app.post('/generate-presigned-url', async (req, res) => {",
		  "    try {",
		  "      const { bucket, fileName, expiresInSeconds } = req.body;",
		  "      const presignedUrl = await generatePresignedUrl(bucket, fileName, expiresInSeconds);",
		  "      res.status(200).json({ success: true, presignedUrl });",
		  "    } catch (error) {",
		  "      console.error(error);",
		  "      res.status(500).json({ success: false, error: error.message });",
		  "    }",
		  "  });"
		],
		"description": "only API without any function"
	  }
}
  